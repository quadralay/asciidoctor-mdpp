#!/usr/bin/env node
// Wrapper for Codex CLI that logs “Task:” prompts into .codex/SESSION_TASKS.md
// Uses session_tracker.js for logging and retrieval
import { spawnSync } from 'child_process';
import { logTask, lastTask } from './session_tracker.js';

// Real Codex binary (can be overridden via CODEX_BIN env)
const realCodex = process.env.CODEX_BIN || '/root/.nvm/versions/node/v22.6.0/bin/codex';

// Build prompt string from argv
const args = process.argv.slice(2);
const promptText = args.join(' ');

// On startup, announce the last logged task (if any)
const last = lastTask();
if (last) {
  console.log(`⚡ Resuming last task:\n  ${last}\n`);
}

// If this invocation looks like a task declaration, log it
if (/^\s*task:/i.test(promptText)) {
  logTask(promptText);
}

// Forward all args to the real Codex CLI
const result = spawnSync(realCodex, args, { stdio: 'inherit' });
process.exit(result.status);